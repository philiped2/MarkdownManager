@model MarkdownManagerNew.Viewmodels.CreateDocumentViewModel2

@{
    ViewBag.Title = "CreateDocument2";
}

<h3>Nytt dokument (Post via angular)</h3>
<div ng-controller="NewDocumentController">
    <div ng-show="statusMessage">{{statusMessage}}</div>
    <form name="newDocumentForm" ng-submit="AddDocument()">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Titel", @ng_model = "document.name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Beskrivning", @ng_model = "document.description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mdDivWrapper">
                <div class="col-sm-12">
                    <button ng-click="toggleModal()" class="btn btn-default" type="button">Text från markdown-fil</button>
                </div>
                <modal title="Text från fil" visib="showModal">
                    <div class="form-group">
                        <input type="file" accept=".md,.txt" name="mdFile" id="mdFile" ng-model="mdFile" onchange="angular.element(this).scope().fileInputChange(this)" />
                        <button ng-click="mdFileToMd()" type="button" ng-disabled="!fileIsSelected">Ladda upp text</button>
                    </div>
                </modal>
                <div class="col-sm-12">
                    <div class="form-group col-md-6 markdownEditorForm">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Markdown, new { htmlAttributes = new { @class = "form-control markdownEditor", @ng_model = "document.markdown", @id = "mdEditor" } })
                            @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="col-sm-6 markdownResult"></div>*@
                    @*<div ng-init="initTest='@Model.Markdown'; mdText=initTest;">*@
                    <div ng-init="initTest='@Html.Encode(Model.Markdown)'; document.markdown=initTest;">
                        <md class="col-sm-6 markdownResult" ng-model="document.markdown" id="mdResult">
                        </md>
                    </div>
                </div>
            </div>

            <div class="row">
                <p><b>Selected User: </b><br />{{asyncSelectedUser}}</p>
                <input type="text" ng-model="asyncSelectedUser" placeholder="Lägg till användare" uib-typeahead="user for user in getUsers($viewValue)" typeahead-loading="loadingUsers" typeahead-no-results="noResults" class="form-control">
                <button type="button" class="btn btn-primary" ng-click="addSelectedUser(asyncSelectedUser)">Lägg till</button>
                <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"> Hämtar taggar</i>
                <div>
                    <table class="table col-sm-12">
                        <tr>
                            <th>
                                Användare
                            </th>
                            <th>
                                Läsa
                            </th>
                            <th>
                                Skriva
                            </th>
                            <th>
                                Ta bort
                            </th>
                        </tr>
                        <tr ng-repeat="user in document.checkboxUsers">
                            <td>
                                {{user.FullName}}
                            </td>
                            <td>
                                <input type="checkbox" ng-model="user.canRead">
                            </td>
                            <td>
                                <input type="checkbox" ng-model="user.canWrite">
                            </td>
                            <td>
                                <input type="checkbox" ng-model="user.canDelete">
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="row">
                <input type="text" ng-model="asyncSelected" placeholder="Lägg till tagg" uib-typeahead="tags for tags in getTags($viewValue)" typeahead-loading="loadingTags" typeahead-no-results="noResults" class="form-control">
                <button type="button" class="btn btn-primary" ng-click="addSelectedTag(asyncSelected)">Lägg till</button>
                <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"> Hämtar taggar</i>
                <div>
                    <dl>
                        <dt>Taggar</dt>
                        <dd ng-repeat="tag in document.tags">
                            {{tag}}
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-1 col-md-10">
                    <input type="submit" value="Skapa" class="btn btn-default" name="CreateDocument" />
                </div>
            </div>
        </div>

    </form>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
