@model MarkdownManagerNew.Viewmodels.CreateGroupViewModel


@{
    ViewBag.Title = "Create Group";
}

<h1>Create group</h1>

<div id="CreateGroupWindow">
    @using (Html.BeginForm("CreateGroup", "User", FormMethod.Post))
    {
        <table>
            <tr>
                <td>
                    Titel: @Html.TextBoxFor(x => x.Name)
                </td>
                <td>
                    Description: @Html.TextBoxFor(x => x.Description)
                </td>
            </tr>
        </table>
        <table>
            @for (int i = 0; i < Model.CheckBoxUsers.Count; i++)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(x => x.CheckBoxUsers[i].IsChecked)
                    </td>
                    @*<td>
                        @Html.HiddenFor(x => x.CheckBoxUsers[i].ID)
                        @Model.CheckBoxUsers[i].ID
                    </td>*@
                    <td>
                        @Html.HiddenFor(x => x.CheckBoxUsers[i].Display)
                        @Model.CheckBoxUsers[i].Display
                    </td>
                </tr>
            }
        </table>

        <button type="submit">OK</button>
    }
</div>


    @*@using (Html.BeginForm("CreateGroup", "User", FormMethod.Post))
    {
        <table>
            <tr>
                <td>
                    Titel: @Html.TextBoxFor(x => x.Name)
                </td>
                <td>
                    Description: @Html.TextBoxFor(x => x.Description)
                </td>
            </tr>
        </table>
        <table>
            @for (int i = 0; i < Model.CheckBoxUsers.Count; i++)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(x => x.CheckBoxUsers[i].IsChecked)
                    </td>
                    <td>
                        @Html.HiddenFor(x => x.CheckBoxUsers[i].ID)
                        @Model.CheckBoxUsers[i].ID
                    </td>
                    <td>
                        @Html.HiddenFor(x => x.CheckBoxUsers[i].Display)
                        @Model.CheckBoxUsers[i].Display
                    </td>
                </tr>
            }
        </table>
        
        <button type="submit">OK</button>
    }*@
    @*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CheckBoxUsers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CheckBoxUsers, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CheckBoxUsers, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default noRounded" />
                </div>
            </div>
        </div>
    }*@
@*</div>*@


<div>
    @Html.ActionLink("Back", "Index")
</div>