@model MarkdownManagerNew.Models.Document

@{
    ViewBag.Title = "Edit";
}




<div ng-controller="EditDocumentController">
    <h2>Redigera dokument</h2>
    @Html.AntiForgeryToken()
    <form>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Markdown, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Markdown, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mdDivWrapper">
                <div class="col-sm-12">
                    <button ng-click="toggleModal()" class="btn btn-default" type="button">Text från markdown-fil</button>
                </div>
                <modal title="Text från fil" visib="showModal">
                    <div class="form-group">
                        <input type="file" accept=".md,.txt" name="mdFile" id="mdFile" ng-model="mdFile" onchange="angular.element(this).scope().fileInputChange(this)" />
                        <button ng-click="mdFileToMd()" type="button" ng-disabled="!fileIsSelected">Ladda upp text</button>
                    </div>
                </modal>
                <div class="col-sm-12">
                    <div class="form-group col-md-6 markdownEditorForm">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Markdown, new { htmlAttributes = new { @class = "form-control markdownEditor", @ng_model = "document.Markdown", @id = "mdEditor" } })
                            @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="col-sm-6 markdownResult"></div>*@
                    @*<div ng-init="initTest='@Model.Markdown'; mdText=initTest;">*@
                    <div ng-init="initTest='@Html.Encode(Model.Markdown)'; document.markdown=initTest;">
                        <md class="col-sm-6 markdownResult" ng-model="document.Markdown" id="mdResult">
                        </md>
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.LastChanged, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastChanged, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastChanged, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.CreatorID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatorID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatorID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Spara" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>
</div>


<div>
    @Html.ActionLink("Tillbaka", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
